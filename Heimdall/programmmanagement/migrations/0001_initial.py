# Generated by Django 4.2.7 on 2023-12-18 20:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProgrammManagementProgrammTableUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='programmmanagementAPI:programm_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Firmennamen', verbose_name='Firmenname')),
                ('description', models.BooleanField(default=True, help_text='Darstellung der Beschreibung', verbose_name='Beschreibung')),
                ('html', models.BooleanField(default=True, help_text='Darstellung der HTML Datei', verbose_name='HTML Datei')),
                ('users', models.BooleanField(default=True, help_text='Darstellung der Benutzer', verbose_name='Benutzer')),
                ('users_count', models.BooleanField(default=True, help_text='Darstellung der Benutzeranzahl', verbose_name='Benutzeranzahl')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='programmmanagementprogrammtableusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Firmen Tabelle',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Firmen Tabelle',
                'ordering': ['user'],
                'permissions': (('programmmanagement_programm_table_setting', 'Programmmanagement Programm Table can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ProgrammManagementProgrammListUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='programmmanagementAPI:programm_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Firmennamen', verbose_name='Firmenname')),
                ('description', models.BooleanField(default=True, help_text='Darstellung der Beschreibung', verbose_name='Beschreibung')),
                ('html', models.BooleanField(default=True, help_text='Darstellung der HTML Datei', verbose_name='HTML Datei')),
                ('users', models.BooleanField(default=True, help_text='Darstellung der Benutzer', verbose_name='Benutzer')),
                ('users_count', models.BooleanField(default=True, help_text='Darstellung der Benutzeranzahl', verbose_name='Benutzeranzahl')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='programmmanagementprogrammlistusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Firmen Liste',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Firmen Liste',
                'ordering': ['user'],
                'permissions': (('programmmanagement_programm_list_setting', 'Programmmanagement Programm List can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ProgrammBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('description', tinymce.models.HTMLField(blank=True, help_text='Kurze Beschreibung des Programms.', null=True, verbose_name='Beschreibung')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('htmlfile', models.FileField(blank=True, null=True, upload_to='programmmanagement/programm/', verbose_name='HTML Datei')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Programm',
            fields=[
            ],
            options={
                'verbose_name': 'Programm',
                'verbose_name_plural': 'Programme',
                'ordering': [],
                'permissions': (('add_programm', 'Programm can view create'), ('change_programm', 'Programm can view change'), ('delete_programm', 'Programm can view delete'), ('detail_programm', 'Programm can view detail'), ('list_programm', 'Programm can view list'), ('table_programm', 'Programm can view table'), ('view_programm', 'Programm can view overview')),
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('programmmanagement.programmbasemodel',),
        ),
    ]
