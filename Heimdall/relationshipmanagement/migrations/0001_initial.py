# Generated by Django 4.2.7 on 2023-12-16 23:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('city', models.CharField(blank=True, help_text='Stadt', max_length=200, null=True, verbose_name='Stadt')),
                ('country', models.CharField(blank=True, help_text='Land', max_length=200, null=True, verbose_name='Land')),
                ('email', models.EmailField(blank=True, help_text='Email Adresse der Firma.', max_length=254, null=True, verbose_name='Email')),
                ('house_number', models.CharField(blank=True, help_text='Hausnummer', max_length=200, null=True, verbose_name='Hausnummer')),
                ('logo', models.FileField(blank=True, help_text='Logo der Firma.', null=True, upload_to='relationshipmanagement/company/', verbose_name='Logo')),
                ('name', models.CharField(blank=True, help_text='Name der Firma.', max_length=200, null=True, verbose_name='Name')),
                ('notice', tinymce.models.HTMLField(blank=True, help_text='Nützliche Informationen über die Firma.', null=True, verbose_name='Bemerkung')),
                ('post_code', models.CharField(blank=True, help_text='Postleitzahl', max_length=200, null=True, verbose_name='Postleitzahl')),
                ('street', models.CharField(blank=True, help_text='Straße ohne Hausnummer', max_length=200, null=True, verbose_name='Straße')),
                ('telephone', models.CharField(blank=True, help_text='Telefonnummer der Firma', max_length=200, null=True, verbose_name='Telefon')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CompanyContactBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Vorname')),
                ('last_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nachname')),
                ('notice', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Bemerkung')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='companycontact_company', to='relationshipmanagement.companybasemodel', verbose_name='Firma')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CompanyItemBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('image', models.FileField(blank=True, help_text='Bild des Artikels.', null=True, upload_to='relationshipmanagement/companyitem/', verbose_name='Bild')),
                ('name', models.CharField(blank=True, help_text='Name der Ware.', max_length=200, null=True, verbose_name='Name')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Preis der Ware.', max_digits=12, null=True, verbose_name='Preis')),
                ('unit', models.CharField(blank=True, choices=[('Stk', 'Stk'), ('mm', 'mm'), ('m', 'm'), ('km', 'km'), ('mg', 'mg'), ('g', 'g'), ('kg', 'kg'), ('t', 't'), ('ml', 'ml'), ('l', 'l')], default='Stk', help_text='Einheit der Ware.', max_length=3, null=True, verbose_name='Einheit')),
                ('item_number', models.CharField(blank=True, help_text='Warennummer der Ware.', max_length=200, null=True, verbose_name='Artikelnummer')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='companyitem_company', to='relationshipmanagement.companybasemodel', verbose_name='Firma')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CompanyContactTelephoneBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, help_text='Telefonnummer.', max_length=200, null=True, verbose_name='Telefonnummer')),
                ('types', models.IntegerField(choices=[(1, 'Telefon'), (2, 'Handy'), (3, 'Fax')], default=1, verbose_name='Typ')),
                ('companycontact', models.ForeignKey(blank=True, help_text='Kontakt der zur Telefonnummer gehört.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='companycontacttelephonebasemodel_companycontact', to='relationshipmanagement.companycontactbasemodel', verbose_name='Kontakt')),
            ],
            options={
                'verbose_name': 'Telefonnummer',
                'verbose_name_plural': 'Telefonnummern',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CompanyContactEmailBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, help_text='Email-Adresse.', max_length=254, null=True, verbose_name='Email')),
                ('companycontact', models.ForeignKey(blank=True, help_text='Kontakt der zur Email gehört.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='companycontactbasemodel_companycontact', to='relationshipmanagement.companycontactbasemodel', verbose_name='Kontakt')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
            ],
            options={
                'verbose_name': 'Firma',
                'verbose_name_plural': 'Firmen',
                'ordering': [],
                'permissions': (('add_company', 'Company can view create'), ('change_company', 'Company can view change'), ('delete_company', 'Company can view delete'), ('detail_company', 'Company can view detail'), ('list_company', 'Company can view list'), ('table_company', 'Company can view table'), ('view_company', 'Company can view overview')),
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('relationshipmanagement.companybasemodel',),
        ),
        migrations.CreateModel(
            name='CompanyContact',
            fields=[
            ],
            options={
                'verbose_name': 'Firmenkontakt',
                'verbose_name_plural': 'Firmenkontakte',
                'ordering': [],
                'permissions': (('add_companycontact', 'CompanyContact can view create'), ('change_companycontact', 'CompanyContact can view change'), ('delete_companycontact', 'CompanyContact can view delete'), ('detail_companycontact', 'CompanyContact can view detail'), ('list_companycontact', 'CompanyContact can view list'), ('table_companycontact', 'CompanyContact can view table'), ('view_companycontact', 'CompanyContact can view overview')),
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('relationshipmanagement.companycontactbasemodel',),
        ),
        migrations.CreateModel(
            name='CompanyContactEmail',
            fields=[
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('relationshipmanagement.companycontactemailbasemodel',),
        ),
        migrations.CreateModel(
            name='CompanyContactTelephone',
            fields=[
            ],
            options={
                'verbose_name': 'Telefonnummer',
                'verbose_name_plural': 'Telefonnummern',
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('relationshipmanagement.companycontacttelephonebasemodel',),
        ),
        migrations.CreateModel(
            name='CompanyItem',
            fields=[
            ],
            options={
                'verbose_name': 'Firmenartikel',
                'verbose_name_plural': 'Firmenartikel',
                'ordering': [],
                'permissions': (('add_companyitem', 'CompanyItem can view create'), ('change_companyitem', 'CompanyItem can view change'), ('delete_companyitem', 'CompanyItem can view delete'), ('detail_companyitem', 'CompanyItem can view detail'), ('list_companyitem', 'CompanyItem can view list'), ('table_companyitem', 'CompanyItem can view table'), ('view_companyitem', 'CompanyItem can view overview')),
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('relationshipmanagement.companyitembasemodel',),
        ),
    ]
