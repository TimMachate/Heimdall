# Generated by Django 4.2.7 on 2024-01-14 21:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('storagemanagement', '0020_alter_offerdatabasemodel_supplieritem'),
    ]

    operations = [
        migrations.CreateModel(
            name='StorageManagementOfferTableUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:offer_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementoffertableusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Angebot Tabelle',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Angebote Tabelle',
                'ordering': ['user'],
                'permissions': (('storagemanagement_offer_table_setting', 'Storagemanagement Offer Table can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementOfferOverviewUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:offer_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementofferoverviewusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Angebot Übersicht',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Angebote Übersicht',
                'ordering': ['user'],
                'permissions': (('storagemanagement_offer_overview_setting', 'Storagemanagement Offer Overview can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementOfferListUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:offer_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementofferlistusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Angebot Liste',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Angebote Liste',
                'ordering': ['user'],
                'permissions': (('storagemanagement_offer_list_setting', 'Storagemanagement Offer List can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementOfferdataTableUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:offerdata_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementofferdatatableusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Angebot Artikel Tabelle',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Angebot Artikel Tabelle',
                'ordering': ['user'],
                'permissions': (('storagemanagement_offerdata_table_setting', 'Storagemanagement Offerdata Table can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementOfferdataOverviewUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:offerdata_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementofferdataoverviewusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Angebots Artikel Übersicht',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Angebots Artikel Übersicht',
                'ordering': ['user'],
                'permissions': (('storagemanagement_offerdata_overview_setting', 'Storagemanagement Offerdata Overview can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementOfferdataListUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:offerdata_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('stock', models.BooleanField(default=True, help_text='Darstellung der Lagermenge', verbose_name='Lagermenge')),
                ('notice', models.BooleanField(default=True, help_text='Darstellung der Bemerkung', verbose_name='Bemerkung')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementofferdatalistusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Angebot Artikel Liste',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Angebot Artikel Liste',
                'ordering': ['user'],
                'permissions': (('storagemanagement_offerdata_list_setting', 'Storagemanagement Offerdata List can view Setting'),),
                'default_permissions': (),
            },
        ),
    ]
