# Generated by Django 4.2.7 on 2024-01-07 17:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('relationshipmanagement', '0012_alter_companycontactbasemodel_company_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OfferBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('done', models.BooleanField(blank=True, default=False, help_text='Angebot wurde bearbeitet.', verbose_name='Bearbeitet')),
                ('notice', tinymce.models.HTMLField(blank=True, help_text='Nützliche Informationen zum Angebot.', null=True, verbose_name='Bemerkung')),
                ('offer_file', models.FileField(blank=True, help_text='Erhaltenes Angebot', null=True, upload_to='storagemanagement/offer/', verbose_name='Angebot')),
                ('ordered', models.BooleanField(blank=True, default=False, help_text='Bestellung wurde aufgegeben.', verbose_name='Bestellung')),
                ('ordered_datetime', models.DateTimeField(blank=True, default=None, help_text='Zeitpunkt der Erstellung der Bestellung.', null=True, verbose_name='Erstellung der Bestellung.')),
                ('recived', models.BooleanField(blank=True, default=False, help_text='Bestellung angekommen.', verbose_name='Erhalten.')),
                ('recived_datetime', models.DateTimeField(blank=True, default=None, help_text='Zeitpunkt des Erhalten der Bestellung.', null=True, verbose_name='Ankunft der Bestellung.')),
                ('sent', models.BooleanField(blank=True, default=False, help_text='Bestellung wurde rausgeschickt.', verbose_name='Bestellt.')),
                ('sent_datetime', models.DateTimeField(blank=True, default=None, help_text='Zeitpunkt der Bestellung.', null=True, verbose_name='Zeitpunkt der Bestellung.')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('ordered_user_id', models.ForeignKey(blank=True, default=None, help_text='Person die die Bestellung erstellt hat.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='offer_ordered_user_id', to=settings.AUTH_USER_MODEL, verbose_name='Person der Erstellung der Bestellung')),
                ('recived_user_id', models.ForeignKey(blank=True, default=None, help_text='Person die die Bestellung erhalten hat.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='offer_recived_user_id', to=settings.AUTH_USER_MODEL, verbose_name='Person des Erhalten der Bestellung')),
                ('sent_user_id', models.ForeignKey(blank=True, default=None, help_text='Person die bestellt hat.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='offer_sent_user_id', to=settings.AUTH_USER_MODEL, verbose_name='Besteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='OfferDataBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('amount', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Menge')),
                ('authorized', models.BooleanField(blank=True, default=None, help_text='Angebot wurde autorisiert.', null=True, verbose_name='Autorisiert')),
                ('authorized_datetime', models.DateTimeField(blank=True, default=None, help_text='Zeitpunkt der Autorisierung.', null=True, verbose_name='Zeitpunkt der Autorisierung.')),
                ('done', models.BooleanField(blank=True, default=False, help_text='Artikel des Angebotes wurde bearbeitet.', null=True, verbose_name='Erledigt')),
                ('notice', tinymce.models.HTMLField(blank=True, help_text='Nützliche Informationen für das Angebot.', null=True, verbose_name='Bemerkung')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Preis der Ware.', max_digits=12, null=True, verbose_name='Preis')),
                ('authorized_user_id', models.ForeignKey(blank=True, default=None, help_text='Person der Autorisierung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='offerdata_authorized_user_id', to=settings.AUTH_USER_MODEL, verbose_name='Autorisierer')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='OrderBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('order_file', models.FileField(blank=True, help_text='Verschickte Bestellung', null=True, upload_to='storagemanagement/order/order', verbose_name='Bestellung')),
                ('done', models.BooleanField(blank=True, default=False, help_text='Angebot wurde bearbeitet.', verbose_name='Bearbeitet')),
                ('delivery_note', models.FileField(blank=True, help_text='Erhaltener Lieferschein', null=True, upload_to='storagemanagement/offer/deliverynote/', verbose_name='Lieferschein')),
                ('notice', tinymce.models.HTMLField(blank=True, help_text='Nützliche Informationen zum Angebot.', null=True, verbose_name='Bemerkung')),
                ('recived', models.BooleanField(blank=True, default=False, help_text='Bestellung angekommen.', verbose_name='Erhalten.')),
                ('sent_datetime', models.DateTimeField(blank=True, default=None, help_text='Zeitpunkt des Erhalten der Bestellung.', null=True, verbose_name='Ankunft der Bestellung.')),
                ('sent', models.BooleanField(blank=True, default=False, help_text='Bestellung wurde rausgeschickt.', verbose_name='Bestellt.')),
                ('recived_datetime', models.DateTimeField(blank=True, default=None, help_text='Zeitpunkt der Bestellung.', null=True, verbose_name='Zeitpunkt der Bestellung.')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('recived_user_id', models.ForeignKey(blank=True, default=None, help_text='Person die die Bestellung erhalten hat.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_recived_user_id', to=settings.AUTH_USER_MODEL, verbose_name='Person des Erhalten der Bestellung')),
                ('sent_user_id', models.ForeignKey(blank=True, default=None, help_text='Person die bestellt hat.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_sent_user_id', to=settings.AUTH_USER_MODEL, verbose_name='Besteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='OrderDataBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('amount', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Menge')),
                ('amount_recived', models.PositiveIntegerField(blank=True, null=True, verbose_name='Erhaltene Menge')),
                ('authorized', models.BooleanField(blank=True, default=None, help_text='Bestellung wurde autorisiert.', null=True, verbose_name='Autorisiert')),
                ('authorized_datetime', models.DateTimeField(blank=True, default=None, help_text='Zeitpunkt der Autorisierung.', null=True, verbose_name='Zeitpunkt der Autorisierung.')),
                ('booking', models.BooleanField(blank=True, default=None, help_text='Bestellung wurde gebucht.', null=True, verbose_name='Gebucht')),
                ('booking_datetime', models.DateTimeField(blank=True, default=None, help_text='Zeitpunkt der Buchung.', null=True, verbose_name='Zeitpunkt der Buchung.')),
                ('done', models.BooleanField(blank=True, default=False, help_text='Angebot wurde erledigt.', verbose_name='Erledigt')),
                ('notice', tinymce.models.HTMLField(blank=True, help_text='Nützliche Informationen für das Angebot.', null=True, verbose_name='Bemerkung')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Preis der Ware.', max_digits=12, null=True, verbose_name='Preis')),
                ('authorized_user_id', models.ForeignKey(blank=True, default=None, help_text='Person der Autorisierung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orderdata_authorized_user_id', to=settings.AUTH_USER_MODEL, verbose_name='Autorisierer')),
                ('booking_user_id', models.ForeignKey(blank=True, default=None, help_text='Person der Buchung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orderdata_booking_user_id', to=settings.AUTH_USER_MODEL, verbose_name='Bucher')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='RequestDataBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Menge')),
                ('authorized', models.BooleanField(blank=True, default=None, help_text='Anfrage wurde autorisiert.', null=True, verbose_name='Autorisiert')),
                ('authorized_datetime', models.DateTimeField(blank=True, default=None, editable=False, help_text='Zeitpunkt der Autorisierung.', null=True, verbose_name='Zeitpunkt der Autorisierung.')),
                ('done', models.BooleanField(default=False, help_text='Bearbeitung der Anfrage Ja/Nein', verbose_name='Bearbeitet')),
                ('notice', tinymce.models.HTMLField(blank=True, help_text='Nützliche Informationen zur Anfrage.', null=True, verbose_name='Bemerkung')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Preis der Ware.', max_digits=12, null=True, verbose_name='Preis')),
                ('authorized_user_id', models.ForeignKey(blank=True, default=None, editable=False, help_text='Person der Autorisierung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='requestdata_authorized_user_id', to=settings.AUTH_USER_MODEL, verbose_name='Autorisierer')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
            ],
            options={
                'verbose_name': 'Lieferant',
                'verbose_name_plural': 'Lieferanten',
                'ordering': [],
                'permissions': (('add_supplier', 'Supplier can view create'), ('change_supplier', 'Supplier can view change'), ('delete_supplier', 'Supplier can view delete'), ('detail_supplier', 'Supplier can view detail'), ('list_supplier', 'Supplier can view list'), ('table_supplier', 'Supplier can view table'), ('view_supplier', 'Supplier can view overview')),
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('relationshipmanagement.companybasemodel',),
        ),
        migrations.CreateModel(
            name='SupplierContact',
            fields=[
            ],
            options={
                'verbose_name': 'Lieferantkontakt',
                'verbose_name_plural': 'Lieferantenkontakte',
                'ordering': [],
                'permissions': (('add_suppliercontact', 'SupplierContact can view create'), ('change_suppliercontact', 'SupplierContact can view change'), ('delete_suppliercontact', 'SupplierContact can view delete'), ('detail_suppliercontact', 'SupplierContact can view detail'), ('list_suppliercontact', 'SupplierContact can view list'), ('table_suppliercontact', 'SupplierContact can view table'), ('view_suppliercontact', 'SupplierContact can view overview')),
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('relationshipmanagement.companycontactbasemodel',),
        ),
        migrations.CreateModel(
            name='SupplierContactEmail',
            fields=[
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('relationshipmanagement.companycontactemailbasemodel',),
        ),
        migrations.CreateModel(
            name='SupplierContactTelephone',
            fields=[
            ],
            options={
                'verbose_name': 'Telefonnummer',
                'verbose_name_plural': 'Telefonnummern',
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('relationshipmanagement.companycontacttelephonebasemodel',),
        ),
        migrations.CreateModel(
            name='SupplierItem',
            fields=[
            ],
            options={
                'verbose_name': 'Lieferantenartikel',
                'verbose_name_plural': 'Lieferantenartikel',
                'ordering': [],
                'permissions': (('add_supplieritem', 'SupplierItem can view create'), ('change_supplieritem', 'SupplierItem can view change'), ('delete_supplieritem', 'SupplierItem can view delete'), ('detail_supplieritem', 'SupplierItem can view detail'), ('list_supplieritem', 'SupplierItem can view list'), ('table_supplieritem', 'SupplierItem can view table'), ('view_supplieritem', 'SupplierItem can view overview')),
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('relationshipmanagement.companyitembasemodel',),
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('offerbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='storagemanagement.offerbasemodel')),
            ],
            options={
                'verbose_name': 'Angebot',
                'verbose_name_plural': 'Angebote',
                'ordering': [],
                'permissions': (('add_offer', 'Offer can view create'), ('authorize_true_offer', 'Offer can authorize false offer'), ('authorize_false_offer', 'Offer can authorize false offer'), ('change_offer', 'Offer can view change'), ('delete_offer', 'Offer can view delete'), ('detail_offer', 'Offer can view detail'), ('list_offer', 'Offer can view list'), ('recived_offer', 'Offer can recived offer'), ('sent_offer', 'Offer can sent offer'), ('order_true_offer', 'Offer can order true'), ('order_false_offer', 'Offer can order false'), ('table_offer', 'Offer can view table'), ('view_offer', 'Offer can view overview')),
                'default_permissions': (),
            },
            bases=('storagemanagement.offerbasemodel',),
        ),
        migrations.CreateModel(
            name='OfferData',
            fields=[
                ('offerdatabasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='storagemanagement.offerdatabasemodel')),
            ],
            options={
                'verbose_name': 'Angebot Artikel',
                'verbose_name_plural': 'Angebote Artikel',
                'ordering': [],
                'permissions': (('add_offerdata', 'OfferData can view create'), ('authorize_true_offerdata', 'OfferData can authorize true'), ('authorize_false_offerdata', 'OfferData can authorize false'), ('change_offerdata', 'OfferData can view change'), ('delete_offerdata', 'OfferData can view delete'), ('detail_offerdata', 'OfferData can view detail'), ('list_offerdata', 'OfferData can view list'), ('send_offerdata', 'OfferData can send offerdata'), ('table_offerdata', 'OfferData can view table'), ('view_offerdata', 'OfferData can view overview')),
                'default_permissions': (),
            },
            bases=('storagemanagement.offerdatabasemodel',),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('orderbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='storagemanagement.orderbasemodel')),
            ],
            options={
                'verbose_name': 'Bestellung',
                'verbose_name_plural': 'Bestellungen',
                'ordering': [],
                'permissions': (('add_order', 'Order can view create'), ('change_order', 'Order can view change'), ('delete_order', 'Order can view delete'), ('detail_order', 'Order can view detail'), ('list_order', 'Order can view list'), ('table_order', 'Order can view table'), ('view_order', 'Order can view overview')),
                'default_permissions': (),
            },
            bases=('storagemanagement.orderbasemodel',),
        ),
        migrations.CreateModel(
            name='OrderData',
            fields=[
                ('orderdatabasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='storagemanagement.orderdatabasemodel')),
            ],
            options={
                'verbose_name': 'Bestellung Artikel',
                'verbose_name_plural': 'Bestellungen Artikel',
                'ordering': [],
                'permissions': (('add_orderdata', 'OrderData can view create'), ('authorize_true_orderdata', 'OrderData can authorize true'), ('authorize_false_orderdata', 'OrderData can authorize false'), ('booking_true_orderdata', 'OrderData can booking true'), ('booking_false_orderdata', 'OrderData can booking false'), ('change_orderdata', 'OrderData can view change'), ('delete_orderdata', 'OrderData can view delete'), ('detail_orderdata', 'OrderData can view detail'), ('list_orderdata', 'OrderData can view list'), ('table_orderdata', 'OrderData can view table'), ('view_orderdata', 'OrderData can view overview')),
                'default_permissions': (),
            },
            bases=('storagemanagement.orderdatabasemodel',),
        ),
        migrations.CreateModel(
            name='RequestData',
            fields=[
                ('requestdatabasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='storagemanagement.requestdatabasemodel')),
            ],
            options={
                'verbose_name': 'Anfrage',
                'verbose_name_plural': 'Anfragen',
                'ordering': [],
                'permissions': (('add_requestdata', 'RequestData can view create'), ('authorize_true_requestdata', 'RequestData can authorize true'), ('authorize_false_requestdata', 'RequestData can authorize false'), ('change_requestdata', 'RequestData can view change'), ('delete_requestdata', 'RequestData can view delete'), ('detail_requestdata', 'RequestData can view detail'), ('list_requestdata', 'RequestData can view list'), ('table_requestdata', 'RequestData can view table'), ('view_requestdata', 'RequestData can view overview')),
                'default_permissions': (),
            },
            bases=('storagemanagement.requestdatabasemodel',),
        ),
        migrations.CreateModel(
            name='SupplierItemBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('supplieritem', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplieritem_supplieritem', to='storagemanagement.supplieritem', verbose_name='Artikel')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SupplierBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('email_address_offer', models.EmailField(blank=True, help_text='Email bei der ein Angebot angefragt wird', max_length=254, null=True, verbose_name='Email Angebot')),
                ('email_address_cc_offer', models.CharField(blank=True, help_text='\nCC Email bei der ein Angebot angefragt wird.\nMehrere Emails werden durch ein Simikolon getrennt.', max_length=200, null=True, verbose_name='CC Email Angebot')),
                ('email_address_order', models.EmailField(blank=True, help_text='Email bei der eine Bestellung aufgegeben wird', max_length=254, null=True, verbose_name='Email Bestellung')),
                ('email_address_cc_order', models.CharField(blank=True, help_text='\nCC Email bei der eine Bestellung aufgegeben wird.\nMehrere Emails werden durch ein Simikolon getrennt.', max_length=200, null=True, verbose_name='CC Email Bestellung')),
                ('email_body_offer', tinymce.models.HTMLField(default='\nSehr geehrte Damen und Herren,\n\nbitte schicken sie mir ein Angebot für die nachfolgend aufgelisteten Dinge.\n\nStückzahl [Einheit] - Artikel (Artikelnummer)\n        ', help_text='Anschreiben für ein Angebote.', verbose_name='Anschreiben Angebot')),
                ('email_body_order', tinymce.models.HTMLField(default='\nSehr geehrte Damen und Herren,\n\nhiermit erhalten sie unsere Bestellung für die unten aufgelisteten Artikel. Im Anhang befindet sich der Auftrag.\n\nStückzahl [Einheit] - Artikel (Artikelnummer)\n        ', help_text='Anschreiben für eine Bestellung.', verbose_name='Anschreiben Bestellung')),
                ('email_subject_offer', models.CharField(default='Angebot', help_text='Inhalt der Betreffzeile bei der Anfrage eines Angebotes', max_length=200, verbose_name='Betreff Angebot')),
                ('email_subject_order', models.CharField(default='Bestellung', help_text='Inhalt der Betreffzeile bei der Bestellung', max_length=200, verbose_name='Betreff Bestellung')),
                ('company', models.OneToOneField(help_text='Firma ', on_delete=django.db.models.deletion.CASCADE, related_name='company_supplier', to='relationshipmanagement.companybasemodel', verbose_name='Firma')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementSupplierTableUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:supplier_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Firmennamen', verbose_name='Firmenname')),
                ('street', models.BooleanField(default=True, help_text='Darstellung der Straße', verbose_name='Straße')),
                ('house_number', models.BooleanField(default=True, help_text='Darstellung der Straßennummer', verbose_name='Straßennummer')),
                ('postcode', models.BooleanField(default=True, help_text='Darstellung der Postleitzahl', verbose_name='Postleitzahl')),
                ('city', models.BooleanField(default=True, help_text='Darstellung der Stadt', verbose_name='Stadt')),
                ('country', models.BooleanField(default=True, help_text='Darstellung des Landes', verbose_name='Land')),
                ('phone', models.BooleanField(default=True, help_text='Darstellung der Telefonnummer', verbose_name='phone')),
                ('email', models.BooleanField(default=True, help_text='Darstellung der email', verbose_name='E-Mail')),
                ('email_address_offer', models.BooleanField(default=True, help_text='Darstellung der Email Adresse für das Einholen von Angeboten.', verbose_name='Angebot E-Mail')),
                ('email_address_cc_offer', models.BooleanField(default=True, help_text='Darstellung der Email Adressen im CC für das Einholen von Angeboten.', verbose_name='Angebot E-Mail CC')),
                ('email_subject_offer', models.BooleanField(default=True, help_text='Darstellung des Email Betreff des Angebotes.', verbose_name='Angebot E-Mail Betreff')),
                ('email_body_offer', models.BooleanField(default=True, help_text='Darstellung des Email Inhaltes des Angebotes.', verbose_name='Angebot E-Mail Inhalt')),
                ('email_address_order', models.BooleanField(default=True, help_text='Darstellung der Email Adresse für die Bestellung.', verbose_name='Bestellung E-Mail')),
                ('email_address_cc_order', models.BooleanField(default=True, help_text='Darstellung der Email Adressen im CC für die Bestellung.', verbose_name='Bestellung E-Mail CC')),
                ('email_subject_order', models.BooleanField(default=True, help_text='Darstellung des Email Betreff der Bestellung.', verbose_name='Bestellung E-Mail Betreff')),
                ('email_body_order', models.BooleanField(default=True, help_text='Darstellung des Email Inhaltes der Bestellung.', verbose_name='Bestellung E-Mail Inhalt')),
                ('contact', models.BooleanField(default=True, help_text='Darstellung der Anzahl der Kontakte', verbose_name='Kontakte')),
                ('item', models.BooleanField(default=True, help_text='Darstellung der Artikel', verbose_name='Artikel')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('notice', models.BooleanField(default=True, help_text='Darstellung der Bemerkung', verbose_name='Bemerkung')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementsuppliertableusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Lagermanagement Lieferanten Tabelle',
                'verbose_name_plural': 'Einstellungen Lagermanagement Lieferanten Tabelle',
                'ordering': ['user'],
                'permissions': (('storagemanagement_supplier_table_setting', 'Storagemanagement Supplier Table can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementSupplierOverviewUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:supplier_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Firmennamen', verbose_name='Firmenname')),
                ('logo', models.BooleanField(default=True, help_text='Darstellung des Logos', verbose_name='Logo')),
                ('phone', models.BooleanField(default=True, help_text='Darstellung der Telefonnummer', verbose_name='phone')),
                ('email', models.BooleanField(default=True, help_text='Darstellung der Email', verbose_name='E-Mail')),
                ('contact', models.BooleanField(default=True, help_text='Darstellung der Anzahl der Kontakte', verbose_name='Kontakte')),
                ('item', models.BooleanField(default=True, help_text='Darstellung der Artikel', verbose_name='Artikel')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementsupplieroverviewusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Lagermanagement Lieferanten Übersicht',
                'verbose_name_plural': 'Einstellungen Lagermanagement Lieferanten Übersicht',
                'ordering': ['user'],
                'permissions': (('storagemanagement_supplier_overview_setting', 'Storagemanagement Supplier Overview can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementSupplierListUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:supplier_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Firmennamen', verbose_name='Firmenname')),
                ('street', models.BooleanField(default=True, help_text='Darstellung der Straße', verbose_name='Straße')),
                ('house_number', models.BooleanField(default=True, help_text='Darstellung der Straßennummer', verbose_name='Straßennummer')),
                ('postcode', models.BooleanField(default=True, help_text='Darstellung der Postleitzahl', verbose_name='Postleitzahl')),
                ('city', models.BooleanField(default=True, help_text='Darstellung der Stadt', verbose_name='Stadt')),
                ('country', models.BooleanField(default=True, help_text='Darstellung des Landes', verbose_name='Land')),
                ('phone', models.BooleanField(default=True, help_text='Darstellung der Telefonnummer', verbose_name='phone')),
                ('email', models.BooleanField(default=True, help_text='Darstellung der Email', verbose_name='E-Mail')),
                ('email_address_offer', models.BooleanField(default=True, help_text='Darstellung der Email Adresse für das Einholen von Angeboten.', verbose_name='Angebot E-Mail')),
                ('email_address_cc_offer', models.BooleanField(default=True, help_text='Darstellung der Email Adressen im CC für das Einholen von Angeboten.', verbose_name='Angebot E-Mail CC')),
                ('email_subject_offer', models.BooleanField(default=True, help_text='Darstellung des Email Betreff des Angebotes.', verbose_name='Angebot E-Mail Betreff')),
                ('email_body_offer', models.BooleanField(default=True, help_text='Darstellung des Email Inhaltes des Angebotes.', verbose_name='Angebot E-Mail Inhalt')),
                ('email_address_order', models.BooleanField(default=True, help_text='Darstellung der Email Adresse für die Bestellung.', verbose_name='Bestellung E-Mail')),
                ('email_address_cc_order', models.BooleanField(default=True, help_text='Darstellung der Email Adressen im CC für die Bestellung.', verbose_name='Bestellung E-Mail CC')),
                ('email_subject_order', models.BooleanField(default=True, help_text='Darstellung des Email Betreff der Bestellung.', verbose_name='Bestellung E-Mail Betreff')),
                ('email_body_order', models.BooleanField(default=True, help_text='Darstellung des Email Inhaltes der Bestellung.', verbose_name='Bestellung E-Mail Inhalt')),
                ('contact', models.BooleanField(default=True, help_text='Darstellung der Anzahl der Kontakte', verbose_name='Kontakte')),
                ('item', models.BooleanField(default=True, help_text='Darstellung der Artikel', verbose_name='Artikel')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('notice', models.BooleanField(default=True, help_text='Darstellung der Bemerkung', verbose_name='Bemerkung')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementsupplierlistusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Lagermanagement Lieferanten Liste',
                'verbose_name_plural': 'Einstellungen Lagermanagement Lieferanten Liste',
                'ordering': ['user'],
                'permissions': (('storagemanagement_supplier_list_setting', 'Storagemanagement Supplier List can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementSupplierItemTableUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:supplieritem_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Artikels', verbose_name='Artikel')),
                ('supplier', models.BooleanField(default=True, help_text='Darstellung der Firma', verbose_name='Firma')),
                ('item_number', models.BooleanField(default=True, help_text='Darstellung der Artikelnummer', verbose_name='Artikelnummer')),
                ('price', models.BooleanField(default=True, help_text='Darstellung des Preises', verbose_name='Preis')),
                ('unit', models.BooleanField(default=True, help_text='Darstellung der Einheit', verbose_name='Einheit')),
                ('image', models.BooleanField(default=True, help_text='Darstellung des Bildes', verbose_name='Bild')),
                ('storageitem', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('stock_count', models.BooleanField(default=True, help_text='Darstellung der Anzahl der Artikel auf Lager', verbose_name='Stand')),
                ('stock_value', models.BooleanField(default=True, help_text='Darstellung des Wertes', verbose_name='Wert')),
                ('booking_count', models.BooleanField(default=True, help_text='Darstellung der Anzahl der Buchungen', verbose_name='Buchungsanzahl')),
                ('booking_last', models.BooleanField(default=True, help_text='Darstellung der letzten Buchungen', verbose_name='Letzte Buchungen')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('url_request_create', models.BooleanField(default=True, help_text='Darstellung des Links für eine Preisanfrage', verbose_name='Preisanfrage')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementsupplieritemtableusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Item Tabelle',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Item Tabelle',
                'ordering': ['user'],
                'permissions': (('storagemanagement_supplieritem_table_setting', 'Storagemanagement Supplier Item Table can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementSupplierItemOverviewUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:supplieritem_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Artikels', verbose_name='Artikel')),
                ('supplier_name', models.BooleanField(default=True, help_text='Darstellung des Firmen Namens', verbose_name='Firma')),
                ('supplier_url_detail', models.BooleanField(default=True, help_text='Darstellung des Firmen Links', verbose_name='Firmen Link')),
                ('item_number', models.BooleanField(default=True, help_text='Darstellung der Artikelnummer', verbose_name='Artikelnummer')),
                ('image', models.BooleanField(default=True, help_text='Darstellung des Bildes', verbose_name='Bild')),
                ('stock_count', models.BooleanField(default=True, help_text='Darstellung der Anzahl der Artikel auf Lager', verbose_name='Stand')),
                ('stock_value', models.BooleanField(default=True, help_text='Darstellung des Wertes', verbose_name='Wert')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementsupplieritemoverviewusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Item Übersicht',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Item Übersicht',
                'ordering': ['user'],
                'permissions': (('storagemanagement_supplieritem_overview_setting', 'Storagemanagement Supplier Item Overview can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementSupplierItemListUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:supplieritem_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Artikels', verbose_name='Artikel')),
                ('supplier', models.BooleanField(default=True, help_text='Darstellung der Firma', verbose_name='Firma')),
                ('item_number', models.BooleanField(default=True, help_text='Darstellung der Artikelnummer', verbose_name='Artikelnummer')),
                ('price', models.BooleanField(default=True, help_text='Darstellung des Preises', verbose_name='Preis')),
                ('unit', models.BooleanField(default=True, help_text='Darstellung der Einheit', verbose_name='Einheit')),
                ('image', models.BooleanField(default=True, help_text='Darstellung des Bildes', verbose_name='Bild')),
                ('storageitem', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('stock_count', models.BooleanField(default=True, help_text='Darstellung der Anzahl der Artikel auf Lager', verbose_name='Stand')),
                ('booking_count', models.BooleanField(default=True, help_text='Darstellung der Anzahl der Buchungen', verbose_name='Buchungsanzahl')),
                ('booking_last', models.BooleanField(default=True, help_text='Darstellung der letzten Buchungen', verbose_name='Letzte Buchungen')),
                ('stock_value', models.BooleanField(default=True, help_text='Darstellung des Wertes', verbose_name='Wert')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('url_request_create', models.BooleanField(default=True, help_text='Darstellung des Links für eine Preisanfrage', verbose_name='Preisanfrage')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementsupplieritemlistusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Item Liste',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Item Liste',
                'ordering': ['user'],
                'permissions': (('storagemanagement_supplieritem_list_setting', 'Storagemanagement Supplier Item List can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementSupplierContactTableUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:suppliercontact_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Namen [Nachname, Vorname]', verbose_name='Name')),
                ('supplier', models.BooleanField(default=True, help_text='Darstellung der Firma', verbose_name='Firma')),
                ('first_name', models.BooleanField(default=True, help_text='Darstellung des Vornamen', verbose_name='Vorname')),
                ('last_name', models.BooleanField(default=True, help_text='Darstellung des Nachname', verbose_name='Nachname')),
                ('phone', models.BooleanField(default=True, help_text='Darstellung der Telefonnummer', verbose_name='Telefon')),
                ('email', models.BooleanField(default=True, help_text='Darstellung der E-Mails', verbose_name='E-Mail')),
                ('notice', models.BooleanField(default=True, help_text='Darstellung der Bemerkung', verbose_name='Bemerkung')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementsuppliercontacttableusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Kontakt Tabelle',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Kontakt Tabelle',
                'ordering': ['user'],
                'permissions': (('storagemanagement_suppliercontact_table_setting', 'Storagemanagement Supplier Contact Table can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementSupplierContactOverviewUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:suppliercontact_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Namen [Nachname, Vorname]', verbose_name='Name')),
                ('supplier_name', models.BooleanField(default=True, help_text='Darstellung des Firmennamen', verbose_name='Firma')),
                ('supplier_url_detail', models.BooleanField(default=True, help_text='Darstellung des Firmen Link', verbose_name='Firmen Link')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementsuppliercontactoverviewusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Kontakt Übersicht',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Kontakt Übersicht',
                'ordering': ['user'],
                'permissions': (('storagemanagement_supplierontact_overview_setting', 'Storagemanagement Supplier Contact Overview can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementSupplierContactListUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:suppliercontact_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Namen [Nachname, Vorname]', verbose_name='Name')),
                ('supplier', models.BooleanField(default=True, help_text='Darstellung der Firma', verbose_name='Firma')),
                ('first_name', models.BooleanField(default=True, help_text='Darstellung des Vornamen', verbose_name='Vorname')),
                ('last_name', models.BooleanField(default=True, help_text='Darstellung des Nachname', verbose_name='Nachname')),
                ('phone', models.BooleanField(default=True, help_text='Darstellung der Telefonnummer', verbose_name='Telefon')),
                ('email', models.BooleanField(default=True, help_text='Darstellung der E-Mails', verbose_name='E-Mail')),
                ('notice', models.BooleanField(default=True, help_text='Darstellung der Bemerkung', verbose_name='Bemerkung')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementsuppliercontactlistusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Kontakt Liste',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Kontakt Liste',
                'ordering': ['user'],
                'permissions': (('storagemanagement_supplierontact_list_setting', 'Storagemanagement Supplier Contact List can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementStorageTableUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:storage_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('image', models.BooleanField(default=True, help_text='Darstellung des Bildes', verbose_name='Bild')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('storageitem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('storageitem_reference_number', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('supplieritem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('supplieritem_reference_number', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('supplieritem_item_number', models.BooleanField(default=True, help_text='Darstellung der Artikelnummer', verbose_name='Artikelnummer')),
                ('supplier_name', models.BooleanField(default=True, help_text='Darstellung der Firma', verbose_name='Firma')),
                ('unit', models.BooleanField(default=True, help_text='Darstellung der Einheit', verbose_name='Einheit')),
                ('price', models.BooleanField(default=True, help_text='Darstellung des Preises', verbose_name='Preis')),
                ('url_unload', models.BooleanField(default=True, help_text='Darstellung des Links für eine Entnahme', verbose_name='Entnahme')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementstoragetableusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Lager Tabelle',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Lager Tabelle',
                'ordering': ['user'],
                'permissions': (('storagemanagement_storage_table_setting', 'Storagemanagement Storage Table can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementStorageOverviewUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:storage_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('image', models.BooleanField(default=True, help_text='Darstellung des Bildes', verbose_name='Bild')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('storageitem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('storageitem_reference_number', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('supplieritem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('supplieritem_reference_number', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('supplieritem_item_number', models.BooleanField(default=True, help_text='Darstellung der Artikelnummer', verbose_name='Artikelnummer')),
                ('supplier_name', models.BooleanField(default=True, help_text='Darstellung der Firma', verbose_name='Firma')),
                ('unit', models.BooleanField(default=True, help_text='Darstellung der Einheit', verbose_name='Einheit')),
                ('price', models.BooleanField(default=True, help_text='Darstellung des Preises', verbose_name='Preis')),
                ('url_unload', models.BooleanField(default=True, help_text='Darstellung des Links für eine Entnahme', verbose_name='Entnahme')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementstorageoverviewusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Lager Übersicht',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Lager Übersicht',
                'ordering': ['user'],
                'permissions': (('storagemanagement_storage_overview_setting', 'Storagemanagement Storage Overview can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementStorageListUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:storage_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('image', models.BooleanField(default=True, help_text='Darstellung des Bildes', verbose_name='Bild')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('storageitem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('storageitem_reference_number', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('supplieritem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('supplieritem_reference_number', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('supplieritem_item_number', models.BooleanField(default=True, help_text='Darstellung der Artikelnummer', verbose_name='Artikelnummer')),
                ('supplier_name', models.BooleanField(default=True, help_text='Darstellung der Firma', verbose_name='Firma')),
                ('unit', models.BooleanField(default=True, help_text='Darstellung der Einheit', verbose_name='Einheit')),
                ('price', models.BooleanField(default=True, help_text='Darstellung des Preises', verbose_name='Preis')),
                ('url_unload', models.BooleanField(default=True, help_text='Darstellung des Links für eine Entnahme', verbose_name='Entnahme')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementstoragelistusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Lager Liste',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Lager Liste',
                'ordering': ['user'],
                'permissions': (('storagemanagement_storage_list_setting', 'Storagemanagement Storage List can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementStorageItemTableUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:storageitem_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('status', models.BooleanField(default=True, help_text='Darstellung des Status', verbose_name='Status')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel Referenz', verbose_name='Lagerartikel Referenz')),
                ('supplier_name', models.BooleanField(default=True, help_text='Darstellung des Lieferanten', verbose_name='Lieferant')),
                ('supplieritem_name', models.BooleanField(default=True, help_text='Darstellung des Artikels', verbose_name='Artikel')),
                ('supplieritem_item_number', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel Referenz', verbose_name='Artikel Referenz')),
                ('stock_count', models.BooleanField(default=True, help_text='Darstellung des Bestands', verbose_name='Bestand')),
                ('stock_percentage', models.BooleanField(default=True, help_text='Darstellung des Stands', verbose_name='Stand')),
                ('minimum', models.BooleanField(default=True, help_text='Darstellung des Minimums', verbose_name='Minimum')),
                ('warning', models.BooleanField(default=True, help_text='Darstellung der Warnung', verbose_name='Warnung')),
                ('maximum', models.BooleanField(default=True, help_text='Darstellung des Maximums', verbose_name='Maximum')),
                ('booking_count', models.BooleanField(default=True, help_text='Darstellung der Anzahl der Buchungen', verbose_name='Anzahl der Buchungen')),
                ('booking_last', models.BooleanField(default=True, help_text='Darstellung der letzten Buchung', verbose_name='Letzte Buchung')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('url_request_create', models.BooleanField(default=True, help_text='Darstellung des Links für eine Preisanfrage', verbose_name='Preisanfrage')),
                ('url_booking_add', models.BooleanField(default=True, help_text='Darstellung des Links für eine Zubuchung', verbose_name='Zubuchung')),
                ('url_booking', models.BooleanField(default=True, help_text='Darstellung des Links für eine Buchung', verbose_name='Erstellung einer Buchung')),
                ('url_booking_remove', models.BooleanField(default=True, help_text='Darstellung des Links für eine Abbuchung', verbose_name='Abbuchung')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementstorageitemtableusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Lagerartikel Tabelle',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Lagerartikel Tabelle',
                'ordering': ['user'],
                'permissions': (('storagemanagement_storageitem_table_setting', 'Storagemanagement Storage Item Table can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementStorageItemOverviewUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:storageitem_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('image', models.BooleanField(default=True, help_text='Darstellung des Bildes', verbose_name='Bild')),
                ('status', models.BooleanField(default=True, help_text='Darstellung des Status', verbose_name='Status')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('stock_count', models.BooleanField(default=True, help_text='Darstellung des Bestands', verbose_name='Bestand')),
                ('stock_percentage', models.BooleanField(default=True, help_text='Darstellung des Stands', verbose_name='Stand')),
                ('url_booking_add', models.BooleanField(default=True, help_text='Darstellung des Links für eine Zubuchung', verbose_name='Zubuchung')),
                ('url_booking_create', models.BooleanField(default=True, help_text='Darstellung des Links für eine Buchung', verbose_name='Erstellung einer Buchung')),
                ('url_booking_remove', models.BooleanField(default=True, help_text='Darstellung des Links für eine Abbuchung', verbose_name='Abbuchung')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_offer', models.BooleanField(default=True, help_text='Darstellung des Angebots-Links', verbose_name='Angebot-Link')),
                ('offer_count', models.BooleanField(default=True, help_text='Darstellung des Anzahl der offenen Angebote', verbose_name='Offene Angebote')),
                ('url_order', models.BooleanField(default=True, help_text='Darstellung des Bestellung-Links', verbose_name='Bestellung-Link')),
                ('order_count', models.BooleanField(default=True, help_text='Darstellung des Anzahl der offenen Bestellungen', verbose_name='Offene Bestellungen')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementstorageitemoverviewusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Lagerartikel Übersicht',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Lagerartikel Übersicht',
                'ordering': ['user'],
                'permissions': (('storagemanagement_storageitem_overview_setting', 'Storagemanagement Storage Item Overview can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementStorageItemListUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:storageitem_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('status', models.BooleanField(default=True, help_text='Darstellung des Status', verbose_name='Status')),
                ('name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel Referenz', verbose_name='Lagerartikel Referenz')),
                ('supplier_name', models.BooleanField(default=True, help_text='Darstellung des Lieferanten', verbose_name='Lieferant')),
                ('supplieritem_name', models.BooleanField(default=True, help_text='Darstellung des Artikels', verbose_name='Artikel')),
                ('supplieritem_item_number', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel Artikelnummer', verbose_name='Artikelnummer')),
                ('stock_count', models.BooleanField(default=True, help_text='Darstellung des Bestands', verbose_name='Bestand')),
                ('stock_percentage', models.BooleanField(default=True, help_text='Darstellung des Stands', verbose_name='Stand')),
                ('minimum', models.BooleanField(default=True, help_text='Darstellung des Minimums', verbose_name='Minimum')),
                ('warning', models.BooleanField(default=True, help_text='Darstellung der Warnung', verbose_name='Warnung')),
                ('maximum', models.BooleanField(default=True, help_text='Darstellung des Maximums', verbose_name='Maximum')),
                ('booking_count', models.BooleanField(default=True, help_text='Darstellung der Anzahl der Buchungen', verbose_name='Anzahl der Buchungen')),
                ('booking_last', models.BooleanField(default=True, help_text='Darstellung der letzten Buchung', verbose_name='Letzte Buchung')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('url_request_create', models.BooleanField(default=True, help_text='Darstellung des Links für eine Preisanfrage', verbose_name='Preisanfrage')),
                ('url_booking_add', models.BooleanField(default=True, help_text='Darstellung des Links für eine Preisanfrage', verbose_name='Zubuchung')),
                ('url_booking', models.BooleanField(default=True, help_text='Darstellung des Links für eine Preisanfrage', verbose_name='Erstellung einer Buchung')),
                ('url_booking_remove', models.BooleanField(default=True, help_text='Darstellung des Links für eine Preisanfrage', verbose_name='Abbuchung')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementstorageitemlistusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Lagerartikel Liste',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Lagerartikel Liste',
                'ordering': ['user'],
                'permissions': (('storagemanagement_storageitem_list_setting', 'Storagemanagement Storage Item List can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementRequestDataTableUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:requestdata_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('image', models.BooleanField(default=True, help_text='Darstellung des Bildes', verbose_name='Bild')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('storageitem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('storageitem', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('supplieritem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('supplieritem', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('item_number', models.BooleanField(default=True, help_text='Darstellung der Artikelnummer', verbose_name='Artikelnummer')),
                ('supplier', models.BooleanField(default=True, help_text='Darstellung der Firma', verbose_name='Firma')),
                ('unit', models.BooleanField(default=True, help_text='Darstellung der Einheit', verbose_name='Einheit')),
                ('price', models.BooleanField(default=True, help_text='Darstellung des Preises', verbose_name='Preis')),
                ('url_unload', models.BooleanField(default=True, help_text='Darstellung des Links für eine Entnahme', verbose_name='Entnahme')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementrequestdatatableusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Anfrage Tabelle',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Anfragen Tabelle',
                'ordering': ['user'],
                'permissions': (('storagemanagement_requestdata_table_setting', 'Storagemanagement Request Data Table can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementRequestDataListUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:requestdata_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('image', models.BooleanField(default=True, help_text='Darstellung des Bildes', verbose_name='Bild')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('storageitem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('storageitem', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('supplieritem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('supplieritem', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('item_number', models.BooleanField(default=True, help_text='Darstellung der Artikelnummer', verbose_name='Artikelnummer')),
                ('supplier', models.BooleanField(default=True, help_text='Darstellung der Firma', verbose_name='Firma')),
                ('unit', models.BooleanField(default=True, help_text='Darstellung der Einheit', verbose_name='Einheit')),
                ('price', models.BooleanField(default=True, help_text='Darstellung des Preises', verbose_name='Preis')),
                ('url_unload', models.BooleanField(default=True, help_text='Darstellung des Links für eine Entnahme', verbose_name='Entnahme')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementrequestdatalistusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Anfrage Liste',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Anfragen Liste',
                'ordering': ['user'],
                'permissions': (('storagemanagement_requestdata_list_setting', 'Storagemanagement Request Data List can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementBookingTableUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:storage_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('supplieritem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('supplieritem_reference_number', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('supplieritem_item_number', models.BooleanField(default=True, help_text='Darstellung der Artikelnummer', verbose_name='Artikelnummer')),
                ('unit', models.BooleanField(default=True, help_text='Darstellung der Einheit', verbose_name='Einheit')),
                ('price', models.BooleanField(default=True, help_text='Darstellung des Preises', verbose_name='Preis')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementbookingtableusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Buchung Tabelle',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Buchungen Tabelle',
                'ordering': ['user'],
                'permissions': (('storagemanagement_booking_table_setting', 'Storagemanagement Booking Table can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementBookingOverviewUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:storage_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('supplieritem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('supplieritem_reference_number', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('supplieritem_item_number', models.BooleanField(default=True, help_text='Darstellung der Artikelnummer', verbose_name='Artikelnummer')),
                ('unit', models.BooleanField(default=True, help_text='Darstellung der Einheit', verbose_name='Einheit')),
                ('price', models.BooleanField(default=True, help_text='Darstellung des Preises', verbose_name='Preis')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementbookingoverviewusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Buchung Übersicht',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Buchungen Übersicht',
                'ordering': ['user'],
                'permissions': (('storagemanagement_booking_overview_setting', 'Storagemanagement Booking Overview can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageManagementBookingListUserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('api', models.CharField(default='storagemanagementAPI:storage_list', help_text='Url Adresse der API', max_length=200, verbose_name='API Url')),
                ('create_date', models.BooleanField(default=True, help_text='Darstellung des Erstellerdatums', verbose_name='Erstellerdatum')),
                ('create_time', models.BooleanField(default=True, help_text='Darstellung der Erstellerzeit', verbose_name='Erstellerzeit')),
                ('create_user', models.BooleanField(default=True, help_text='Darstellung des Erstellers', verbose_name='Ersteller')),
                ('update_date', models.BooleanField(default=True, help_text='Darstellung des Update-Datum', verbose_name='Update-Datum')),
                ('update_time', models.BooleanField(default=True, help_text='Darstellung der Update-Zeit', verbose_name='Update-Zeit')),
                ('update_user', models.BooleanField(default=True, help_text='Darstellung des Update-Benutzer', verbose_name='Update-Benutzer')),
                ('reference_number', models.BooleanField(default=True, help_text='Darstellung der Referenz Nummer', verbose_name='Referenznummer')),
                ('supplieritem_name', models.BooleanField(default=True, help_text='Darstellung des Lagerartikel', verbose_name='Lagerartikel')),
                ('supplieritem_reference_number', models.BooleanField(default=True, help_text='Darstellung der Lagerartikelnummer', verbose_name='Lagerartikelnummer')),
                ('supplieritem_item_number', models.BooleanField(default=True, help_text='Darstellung der Artikelnummer', verbose_name='Artikelnummer')),
                ('unit', models.BooleanField(default=True, help_text='Darstellung der Einheit', verbose_name='Einheit')),
                ('price', models.BooleanField(default=True, help_text='Darstellung des Preises', verbose_name='Preis')),
                ('url_detail', models.BooleanField(default=True, help_text='Darstellung des Detail-Links', verbose_name='Detail-Link')),
                ('url_update', models.BooleanField(default=True, help_text='Darstellung des Update-links', verbose_name='Update-Link')),
                ('url_delete', models.BooleanField(default=True, help_text='Darstellung des Löschen-Links', verbose_name='Löschen-Link')),
                ('url_block', models.BooleanField(default=True, help_text='Darstellung aller Links in einem Block', verbose_name='Links')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storagemanagementbookinglistusersetting_user', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Einstellung Beziehungsmanagement Buchung Liste',
                'verbose_name_plural': 'Einstellungen Beziehungsmanagement Buchungen Liste',
                'ordering': ['user'],
                'permissions': (('storagemanagement_booking_list_setting', 'Storagemanagement Booking List can view Setting'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageItemBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('maximum', models.PositiveIntegerField(blank=True, default=0, help_text='Maximale Lagermenge.', null=True, verbose_name='Maximum')),
                ('minimum', models.PositiveIntegerField(blank=True, default=0, help_text='Minimale Lagermenge.', null=True, verbose_name='Minimum')),
                ('name', models.CharField(blank=True, help_text='Name des Artikels.', max_length=200, null=True, verbose_name='Name')),
                ('warning', models.PositiveIntegerField(blank=True, default=0, help_text='Warnung Lagermenge.', null=True, verbose_name='warning')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('supplieritem', models.ForeignKey(blank=True, help_text='Artikel des Standardlieferanten', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storageitem_supplieritem', to='storagemanagement.supplieritem', verbose_name='Standardartikel')),
                ('supplieritem_data', models.ManyToManyField(blank=True, help_text='Artikel anderer Lieferanten', related_name='storageitem_supplieritem_data', to='storagemanagement.supplieritem', verbose_name='Artikel anderer Lieferanten')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StorageBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('notice', tinymce.models.HTMLField(blank=True, help_text='Bemerkungen zum Prozess', null=True, verbose_name='Bemerkung')),
                ('unload_datetime', models.DateTimeField(blank=True, default=None, help_text='Zeitpunkt der Entnahme.', null=True, verbose_name='Zeitpunkt der Entnahme')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('supplieritem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storage_supplieritem', to='storagemanagement.supplieritem', verbose_name='Artikel')),
                ('unload_user_id', models.ForeignKey(blank=True, default=None, help_text='Person der Entnahme.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='storage_unload_user_id', to=settings.AUTH_USER_MODEL, verbose_name='Entnehmer')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='requestdatabasemodel',
            name='supplieritem',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requestdata_supplieritem', to='storagemanagement.supplieritembasemodel', verbose_name='Item'),
        ),
        migrations.AddField(
            model_name='requestdatabasemodel',
            name='update_user_id',
            field=models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater'),
        ),
        migrations.AddField(
            model_name='orderdatabasemodel',
            name='supplieritem',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orderdata_supplieritem', to='storagemanagement.supplieritem', verbose_name='Firmenartikel'),
        ),
        migrations.AddField(
            model_name='orderdatabasemodel',
            name='update_user_id',
            field=models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater'),
        ),
        migrations.AddField(
            model_name='offerdatabasemodel',
            name='supplieritem',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='offerdata_supplieritem', to='storagemanagement.supplieritembasemodel', verbose_name='Firmenartikel'),
        ),
        migrations.AddField(
            model_name='offerdatabasemodel',
            name='update_user_id',
            field=models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater'),
        ),
        migrations.CreateModel(
            name='BookingBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt der Erstellung.', verbose_name='Zeitpunkt der Erstellung')),
                ('reference_number', models.CharField(blank=True, default=None, editable=False, help_text='Referenznummer, mit der eine eindeutige Identifizierung ermöglicht wird.', max_length=200, null=True, verbose_name='Aktenzeichen')),
                ('slug', models.SlugField(default=None, editable=False, help_text='Slug, mit der eine eindeutige Identifizierung ermöglicht wird.', null=True, unique=True, verbose_name='Slug')),
                ('update_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Zeitpunkt des letzten Updates.', verbose_name='Zeitpunkt des Updates')),
                ('amount', models.IntegerField(blank=True, default=0, help_text='Menge der Buchung', null=True, verbose_name='Menge')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Preis des Artikels.', max_digits=12, null=True, verbose_name='Preis')),
                ('stock', models.PositiveIntegerField(blank=True, default=0, editable=False, help_text='Der aktuelle Bestand im Lager.', null=True, verbose_name='Bestand')),
                ('notice', tinymce.models.HTMLField(blank=True, help_text='Bemerkungen zum Prozess', null=True, verbose_name='Bemerkung')),
                ('create_user_id', models.ForeignKey(default=None, editable=False, help_text='Person der Erstellung.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_create_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('supplieritem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking_supplieritem', to='storagemanagement.supplieritem', verbose_name='Artikel')),
                ('update_user_id', models.ForeignKey(default=None, editable=False, help_text='Person des letzten Updates.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)ss_update_user_id', related_query_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
            ],
            options={
                'verbose_name': 'Buchung',
                'verbose_name_plural': 'Buchungen',
                'ordering': [],
                'permissions': (('add_booking', 'Booking can view create'), ('change_booking', 'Booking can view change'), ('delete_booking', 'Booking can view delete'), ('detail_booking', 'Booking can view detail'), ('list_booking', 'Booking can view list'), ('table_booking', 'Booking can view table'), ('view_booking', 'Booking can view overview')),
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('storagemanagement.bookingbasemodel',),
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
            ],
            options={
                'verbose_name': 'Lager',
                'verbose_name_plural': 'Lager',
                'ordering': [],
                'permissions': (('add_storage', 'Storage can view create'), ('change_storage', 'Storage can view change'), ('delete_storage', 'Storage can view delete'), ('detail_storage', 'Storage can view detail'), ('list_storage', 'Storage can view list'), ('table_storage', 'Storage can view table'), ('unload_storage', 'Storage can unload a Storage Item'), ('view_storage', 'Storage can view overview')),
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('storagemanagement.storagebasemodel',),
        ),
        migrations.CreateModel(
            name='StorageItem',
            fields=[
            ],
            options={
                'verbose_name': 'Lagerartikel',
                'verbose_name_plural': 'Lagerartikel',
                'ordering': [],
                'permissions': (('add_storageitem', 'StorageItem can view create'), ('change_storageitem', 'StorageItem can view change'), ('delete_storageitem', 'StorageItem can view delete'), ('detail_storageitem', 'StorageItem can view detail'), ('list_storageitem', 'StorageItem can view list'), ('table_storageitem', 'StorageItem can view table'), ('view_storageitem', 'StorageItem can view overview')),
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('storagemanagement.storageitembasemodel',),
        ),
        migrations.AddField(
            model_name='storagebasemodel',
            name='booking',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storage_booking', to='storagemanagement.booking', verbose_name='Buchung'),
        ),
        migrations.AddField(
            model_name='requestdatabasemodel',
            name='storageitem',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requestdata_storageitem', to='storagemanagement.storageitem', verbose_name='Item'),
        ),
        migrations.AddField(
            model_name='orderdatabasemodel',
            name='offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_offer', to='storagemanagement.offer', verbose_name='Angebot'),
        ),
        migrations.AddField(
            model_name='orderdatabasemodel',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orderdata_order', to='storagemanagement.order', verbose_name='Bestellung'),
        ),
        migrations.AddField(
            model_name='offerdatabasemodel',
            name='offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='offerdata_offer', to='storagemanagement.offer', verbose_name='Angebot'),
        ),
        migrations.AddField(
            model_name='offerdatabasemodel',
            name='storageitem',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='offerdata_storageitem', to='storagemanagement.storageitem', verbose_name='Lagerartikel'),
        ),
        migrations.AddField(
            model_name='bookingbasemodel',
            name='storageitem',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking_storageitem', to='storagemanagement.storageitem', verbose_name='Artikel'),
        ),
    ]
